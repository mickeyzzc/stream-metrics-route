apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: stream-metrics-route
  name: stream-metrics-route-conf
  namespace: monitoring
stringData:
  config.yaml: |-
    global:
      prefix: "stream"
    router_rules:
      - router_name: thanos-receiver
        upstreams:
          upstream_type: remotewriter
          upstream_urls:
            - http://monitoring-vmagent-0.monitoring-vmagent.monitoring.svc:8429/api/v1/write
            - http://monitoring-vmagent-1.monitoring-vmagent.monitoring.svc:8429/api/v1/write
            - http://monitoring-vmagent-2.monitoring-vmagent.monitoring.svc:8429/api/v1/write
      - router_name: kafka-test
        upstreams:
          upstream_type: kafka
          kafka_config:
            broker_list: office-ops-prometheus:9092
            topic: test
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stream-metrics-route
  namespace: monitoring
  labels:
    app.kubernetes.io/name: stream-metrics-route
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: stream-metrics-route
  template:
    metadata:
      labels:
        app.kubernetes.io/name: stream-metrics-route
    spec:
      volumes:
        - name: stream-metrics-route-conf
          secret:
            secretName: stream-metrics-route-conf
            defaultMode: 420
      containers:
        - name: stream-metrics-route
          image: registry.cn-hangzhou.aliyuncs.com/mickeyzzc/stream-metrics-route:v0.1.0
          args:
            - '-config.path=/stream-metrics-route/config/'
            - '-config.name=config.yaml'
            - '-log.level=debug'
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /-/ready
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /-/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 120
          resources:
            limits:
              cpu: "4"
              memory: 10Gi
            requests:
              cpu: 500m
              memory: 1Gi
          volumeMounts:
            - name: stream-metrics-route-conf
              readOnly: true
              mountPath: /stream-metrics-route/config/config.yaml
              subPath: config.yaml
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
--- 
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: stream-metrics-route
  name: stream-metrics-route
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 8080
    targetPort: http
  selector:
    app.kubernetes.io/name: stream-metrics-route
  #clusterIP: None
--- 
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: stream-metrics-route
  namespace: monitoring
  labels:
    prometheus: k8s
spec:
  podMetricsEndpoints:
    - port: http
      path: /metrics
      interval: 15s
      scrapeTimeout: 10s
      scheme: http
  namespaceSelector:
    matchNames:
      - monitoring
  selector:
    matchLabels:
      app.kubernetes.io/name: stream-metrics-route
